prot.pdb    Step1. Input pdb filepath                               (INPDB)
f    Step1: Basic structural checks & pdb format conversion         (DO_PREMCCE)
f    Step2: Make rotamers                                           (DO_ROTAMERS)
f    Step3: Energy calculations                                     (DO_ENERGY)
f    Step4: Titration via Monte Carlo sampling                      (DO_MONTE)
0    Step2. Sidechain optimization: 0=mcce, 1=GA, 2=mcce + MHD's pruning (SIDECHAIN_OPT)

apbs    Step3. Poisson-Boltzmann solver, apbs, delphi, nppb, zap               (PBE_SOLVER)
surface Step3. Reaction energy method [self, surface]; APBS always uses self   (RXN_METHOD)
4.0     Step2. Protein dielectric constant. Use 8 for small, soluble proteins  (EPSILON_PROT)

# This file contains entries that overwrite those in the parameter directory
# and extra controls over the program:
/home/mcce/MCCE4/extra.tpl  Step3. Use to overwrite some entries in param/ and other program controls (EXTRA)

# The renaming rule. It is sometimes necessary to divide a big group into
# separate ionizable groups, or put ligands and cofactors as one group. This
# can be done by renaming the atom and residue.
/home/mcce/MCCE4/name.txt  Step2. MCCE renaming rule for chemical groups, ligands & cofactors (RENAME_RULES)

ph    Step4. Titration type: "ph" for pH titrations, "eh" for Eh titrations   (TITR_TYPE)
0.0   Step4. pH titration first point                                         (TITR_PH0)
1.0   Step4. pH interval between titration points                             (TITR_PHD)
0.0   Step4. Eh titration first point                                         (TITR_EH0)
30.0  Step4. Eh interval (in mV) between titration points                     (TITR_EHD)
15    Step4. Number of titration points                                       (TITR_STEPS)

/home/mcce/MCCE4/ Step0.  mcce home directory.                                 (MCCE_HOME)
# mcce home directory, the combination of this path and dielectric constant
# points to the parameter directory

t    Step0. Print trace file.                                                   (DO_TRACE)
# creates a record with MCCE revision number, time and date of run, and
# all user options set in run.prm and appends it to (or creates) the
# run.trace file.

t   Step2. Minimize output files (do not keep intermediate files)             (MINIMIZE_SIZE)
# When this flag is "t", the program will not write these files:
#   step2_out.full  by step 2
#   hvrot.pdb       by step 2
#   mc_out          by step 4

# Options specific to each step:
#step 1:
# If this flag is on ('t'), mcce program will identify the C terminus and N
# terminus of the polypeteides based on the geometry. Terminal residues have
# extra ionizable sites than residues having peptide bonds. One needs to be
# careful if there are missing portions of peptide in the given structure.
t    Step1. Label terminal residues?                              (TERMINALS)
0.1  Step1. Remove waters with SAS% above this value              (H2O_SASCUTOFF)
2.0  Step1. Distance limit of reporting clashes                   (CLASH_DISTANCE)
t    Step1. Ignore hydrogens in input structure		          (IGNORE_INPUT_H)
#turning off may cause error in rotamer making
#step 2:
f    Step2. Use control file head1.lst for rotamer making         (ROT_SPECIF)
t    Step2. Rebuild sidechain based on torsion minima             (REBUILD_SC)
t    Step2. Do swap (stereo isotope)                              (ROT_SWAP)
t    Step2. Do rotate?                                            (PACK)
6    Step2. Number of rotamers in a bond rotation                 (ROTATIONS)
f    Step2. Do swing?                                             (SWING)
10.0  Step2. Phi in degrees of swing                              (PHI_SWING)
1.00  Step2. SAS cuttoff of making fewer rotamers                 (SAS_CUTOFF)
10.0  Step2. Cutoff of self vdw in kcal/mol                       (VDW_CUTOFF)
5000  Step2. Number of repacks                                    (REPACKS)
0.03  Step2. Occupancy cutoff of repacks                          (REPACK_CUTOFF)
t     Step2. H-bond directed rotamer making                       (HDIRECTED)
1.0   Step2. Threshold for two conformers being different         (HDIRDIFF)
36    Step2. Limit number of the H bond conformers                (HDIRLIMT)
f     Step2. Do relaxation on waters                              (RELAX_WAT)
3.2   Step2. Remove waters with distance from heavy atoms smaller than this  (WATER_RELAX_THR)
# Relaxation
10    Step2. Number of cycles to relax rotamer clash              (HV_RELAX_NCYCLE)
10    Step2. Time (in fs) for each relaxation iteration           (HV_RELAX_DT)
10    Step2. Number of relaxation iterations                      (HV_RELAX_NITER)
2.    Step2. Relax rotamers with vdw interaction larger than this (HV_RELAX_VDW_THR)
5.    Step2. Do not relax rotamer if heavy atom vdw is larger than this (HV_RELAX_HV_VDW_THR)
-1.0  Step2. Relax if electrostatic interaction is more favorable than this, and the charged groups are close  (HV_RELAX_ELEC_THR)
0.1   Step2. Threshold used to define a charged atom, see hv_relax_elec_dist_thr (HV_RELAX_ELEC_CRG_THR)
3.0   Step2. Only relax electrostatically favorable pairs with charged atom distance shorter than this (HV_RELAX_ELEC_DIST_THR)
20.   Step2. Scaling factor for torsion during relaxation        (HV_TORS_SCALE)
10000 Step2. Maximum number of steps of shake                    (HV_RELAX_N_SHAKE)
0.001 Step2. Maximum allowed bond length deviation               (HV_RELAX_SHAKE_TOL)
1.0   Step2. Constraint distance                                 (HV_RELAX_CONSTRAINT)
20.   Step2. Constraint force to fix atom in original position   (HV_RELAX_CONSTRAINT_FRC)
f     Step2. Include neighbors when doing relaxation (expensive) (HV_RELAX_INCLUDE_NGH)
4.0   Step2. Threshold for neighbor inclusion during relaxation  (HV_RELAX_NGH_THR)
20    Step2. Upper limit number of heavy atom rotamers 	         (N_HV_CONF_LIMIT)
t     Step2. Do relaxation on hydrogens                          (RELAX_H)
-5.0  Step2. Energy threshold for keeping a conformer            (RELAX_E_THR)
200   Step2. Loop over N local microstates                       (RELAX_NSTATES)
6     Step2. Default number of hydroxyl positions                (RELAX_N_HYD)
5.    Step2. Do not relax hydrogen if vdw of two sidechain conformers bigger than this    (RELAX_CLASH_THR)
1.0   Step2. Phi for each step of relaxation                     (RELAX_PHI)
300   Step2. Maximum number of relaxation steps                  (RELAX_NITER)
0.5   Step2. Torque threshold for keep relaxing                  (RELAX_TORQ_THR)
0.02  Step2. Last pruning threshold for conformers               (PRUNE_THR)
0.5   Step2. Pruning cutoff for RMSD                             (PRUNE_RMSD)
1.0   Step2. Pruning cutoff for pairwise eletrostatics           (PRUNE_ELE)
8.0   Step2. Pruning cutoff for pairwise vdw                     (PRUNE_VDW)
0     Step2. Maximum number of conformers per residue (0=unlimited) (NCONF_LIMIT)
#step 3:
f     Step3. Use SAS + Coulomb's law for ele interaction        (QUICK_ENERGIES)
80.0  Step3. Solvent dielectric constant for DelPhi             (EPSILON_SOLV)
65    Step3. Grids in each DelPhi                               (GRIDS_DELPHI)
2.0   Step3. The target grids per angstrom for DelPhi           (GRIDS_PER_ANG)
1.4   Step3. Probe radius                                       (RADIUS_PROBE)
2.0   Step3. Ion radius                                         (IONRAD)
0.15  Step3. Salt concentration                                 (SALT)
/home/mcce/MCCE4/bin/apbs    Step3. APBS executable             (APBS_EXE)
/home/mcce/MCCE4/bin/delphi    Step3. DelPhi executable         (DELPHI_EXE)
f    Step3. Recalculate torsion energies when writing head3.lst (RECALC_TORS)
f    Step3. Reassign charge and radii before delphi (PDB values are used if false) (REASSIGN)
#step 4:
f    Step4. Output Microstate from standard monte carlo         (MS_OUT)
f    Step4. Average the pairwise if t, f uses the smaller       (AVERAGE_PAIRWISE)
20.  Step4. Warning threshold of difference in pairwise         (WARN_PAIRWISE)
5.0  Step4. Big pairwise threshold to make big list             f        Output Microstate from standard monte carlo        (MS_OUT)(BIG_PAIRWISE)

### Common parameters for both monte carlo
-1      Step4. Random seed; -1 uses time as random seed              (MONTE_SEED)
298.15  Step4. Temperature (K), 25 Celsius                           (MONTE_T)
3       Step4. Number of flips                                       (MONTE_FLIPS)
100     Step4. Annealing = MONTE_NSTART * confs                      (MONTE_NSTART)
500     Step4. Equilibration = MONTE_NEQ * confs                     (MONTE_NEQ)
0.001   Step4. Cutoff occupancy of the reduction                     (MONTE_REDUCE)

###  Only for Junjun's monte carlo
6       Step4. Number of independent MC samplings; 2 in run.prm.full (MONTE_RUNS)
2000    Step4. Sampling size = MONTE_NITER * confs                   (MONTE_NITER)
20000   Step4. Trace energy every MONTE_TRACE steps, 0 no trace      (MONTE_TRACE)
1000000 Step4. Maximum microstates for analytical solution           (NSTATE_MAX)
f       Step4. Specify mfe point, f: pKa/Em point                    (MFE_POINT)
-1.0    Step4. MFE cutoff (Kcal), default 0.5                        (MFE_CUTOFF)

###  Only for Yifan's monte carlo
t       Step4. Using Yifan's monte carlo                          (MONTE_ADV_OPT)
f       Step4. Using format from old version                      (MONTE_OLD_INPUT)
5000    Step4. Minimum sampling = MONTE_NITER_MIN * confs         (MONTE_NITER_MIN)
-1      Step4. Maximum sampling: -1: stop when converged, else MONTE_NITER_MAX * confs   (MONTE_NITER_MAX)
10000   Step4. Number of iterations per cycle                     (MONTE_NITER_CYCLE)
1000    Step4. Convergence checks: MONTE_NITER_CHK * confs        (MONTE_NITER_CHK)
-1      Step4. Number of reduce steps; -1: stop when converged    (MONTE_N_REDUCE)
0.01    Step4. Convergence threshold                              (MONTE_CONVERGE)
f       Step4. Calculate free energy                              (MONTE_DO_ENERGY)
3000    Step4. Starting temperature for annealing                 (ANNEAL_TEMP_START)
10      Step4. Number of annealing steps                          (ANNEAL_NSTEP)
500     Step4. Number of iterations/conformer per annealing step  (ANNEAL_NITER_STEP)
# Advanced options:
1       Step3. PBE solver start conformer number, 0 based                   (PBE_START)
99999   Step3. PBE solver end conformer number, self included               (PBE_END)
f       Step3. Skip PBE solver in step3 (DEBUG option)                      (SKIP_ELE)
/tmp    Step3. PBE solver temporary file folder, "/tmp" uses node           (PBE_FOLDER)
t       Step3. Delete delphi focusing directory?                            (DELPHI_CLEAN)
debug.log Step3. Log filename for debugging                                 (DEBUG_LOG)
new.tpl Step2. Local parameter file for unrecognized residues and cofactors (NEWTPL)
1.7     Step2. Default van der Waals radius for SAS                         (DEFAULT_RADIUS)
0.5     Step2. Factor for 1-4 LJ potential strength; 1.0 is full            (FACTOR_14LJ)
6.0     Step2. Dielectric constant for Coulomb's Law                        (EPSILON_COULOMB)
#APBS
65    Step3. Number of APBS grids                                         (GRIDS_APBS)
mol   Step3. APBS protein-solvent surface definition: mol/smol/spl2/spl4  (SURFACE_APBS)
spl0  Step3. APBS mapping the point charges to the grid: spl0/spl2/spl4   (CHARGES_APBS)
sdh   Step3. APBS type of PBE boundary condition: zero/sdh/mdh/focus      (BOUND_COND_APBS)
#IPECE
f     Step2. Use IPECE to add neutral atoms to simulate a membrane slab	         (IPECE_ADD_ME)
33.   Step2. Thickness of the membrane to add with IPECE                         (IPECE_MEM_THICKNESS)
M     Step2. Chain ID of the IPECE membrane atoms				                 (IPECE_MEM_CHAINID)
83    Step2. Testing (run.prm.test): Random seed value, use -1 for random value  (TEST_SEED)
